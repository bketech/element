#!/bin/bash

if [ -z "$1" ];
    then exit 1
fi

prefix='/Library/Frameworks'
if [ ! -z "$2" ]; then
    prefix="$2"
fi

build='build'
version='A'

framework="$build/Frameworks/$1.framework"
framework_prefix="$prefix/$1.framework"

element_fw_libraries=$prefix/Element.framework/Versions/$version/Libraries

binary=$framework/Versions/$version/$1
binary_prefix=$prefix/$1.framework/$version

libraries=$framework/Versions/$version/Libraries
libraries_prefix=$prefix/$1.framework/$version/Libraries

mkdir -p "$libraries"
rm -f $libraries/*

function get_deps {
    otool -L $1 | awk '{print $1}' | egrep "(/opt/|/local/|libs/)" | grep -v 'libjack\.'
}

set -e

echo "DEPLOY: $1.framework"

for dep in `get_deps $binary` ; do
    base=`basename "$dep"`

    # special handlings for libc++ (only copy it once to Element.framework)
    if [ "$base" == "libc++.1.dylib" ] && [ "$1" == "Element" ]; then
       echo "Element.framework libc++ special handlings..."
       cxxlibs=`get_deps $dep`
       for lib in $cxxlibs; do
           if [ -f "$lib" ] ; then
               echo "copy: $lib"
               cp -f "$lib" "$libraries/`basename $lib`"
           fi
       done
       cp -f "$dep" "$libraries/$base"
       HERE=`pwd`
       cd $libraries && ln -s libc++.1.dylib libc++.dylib
       cd $HERE
    elif [ -f "$dep" ] && [ "$base" != "libc++.1.dylib" ]; then
        echo "copy: $dep"
        cp -f "$dep" "$libraries/$base"
    fi
done

executables=$binary
for exe in $executables; do
    changes=""
    for lib in `get_deps $exe` ; do
        base=`basename $lib`
        if [ $base == "libc++.1.dylib" ] || [ $base == "libc++abi.dylib" ]; then
            changes="$changes -change $lib $element_fw_libraries/$base"
        else
            changes="$changes -change $lib $libraries_prefix/$base"
        fi
    done

    if test "x$changes" != "x" ; then
        if install_name_tool $changes $exe ; then
            :
        else
            echo "  install_name_tool failed: `basename $exe`"
            exit 1
        fi
    fi
done


dylibs=`find $libraries -name "*.dylib"`
for dylib in $dylibs; do
    # skip symlinks

    if test -L $dylib ; then
        continue
    fi

    # change all the dependencies

    changes=""
    for lib in `get_deps "$dylib"` ; do
        base=`basename $lib`
        changes="$changes -change $lib $libraries_prefix/$base"
    done

    if test "x$changes" != x ; then
        if install_name_tool $changes $dylib ; then
            :
        else
            echo "install_name_tool failed: `basename $dylib`"
            echo "  proposed changes: $changes"
            exit 1
        fi
    fi

   # now the change what the library thinks its own name is
   base=`basename $dylib`
   install_name_tool -id "$libraries_prefix/$base" "$dylib"
done
echo ""

exit 0
